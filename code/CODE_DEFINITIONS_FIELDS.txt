A code json file contains an array of code objects
Any code object can be in any file, but organisation is king

Code object fields:
	name: The code name
	type: The code type identifiers, separated by single spaces
	next: List of valid types for the *next* code ("null" if the code is not supposed to be followed by codes)
	[priority]: [default 0] "high", "low" or any integer value ("high" == 100, "low" == -100). Defines which codes are checked first in disassembly.
	[scopeModifier]: [default /] "begin" or "end". Using these can make disassembed code look nicer.
	size: The size (in bytes) of the code.
	components: an array of code components objects.

Code Component object fields:
	[name]: The component name
	[type]: space-separated list of types (for index, you can specify "of:something", for pointer, "to:something")
	size: The size (in bytes) of the component.
	[fixed]: [default false], if true, the data will be considered fixed in the code.
	(if fixed=true) value: Value for a fixed component.
	